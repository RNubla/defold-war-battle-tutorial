function init(self)
	msg.post(".", "acquire_input_focus")

	self.moving = false
	self.firing = false

	self.input = vmath.vector3()
	self.dir = vmath.vector3(0, 1, 0)
	self.speed = 50

	self.look_at = vmath.vector3(0, 0, 0)
	self.my_pos = 0
	self.angle = vmath.vector3()
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if self.moving then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end

	if self.firing then
		local angle = math.atan2(self.look_at.y, self.look_at.x)
		local rot = vmath.quat_rotation_z(angle) -- dictates the roation of the sprite so that it is facing forward
		local props = { dir = self.look_at }
		factory.create("#rocketfactory", nil, rot, props)
	end

	self.input.x = 0
	self.input.y = 0

	self.moving = false
	self.firing = false
end

function on_input(self, action_id, action)
	self.my_pos = go.get_position()
	self.look_at = vmath.vector3(action.x - self.my_pos.x, action.y - self.my_pos.y, 0)
	self.look_at = vmath.normalize(self.look_at)
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
	end


	if vmath.length(self.input) > 0 then
		self.moving = true
		self.dir = vmath.normalize(self.input)
	end
end
